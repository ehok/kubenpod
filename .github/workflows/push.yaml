name: CI
on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: "latest"

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Test
        run: make -s build

  tag:
    runs-on: ubuntu-latest
    needs:
      - staticcheck
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

  release:
    runs-on: ubuntu-latest
    needs:
      - tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=latest_tag::$(git describe --tags $(git rev-list --tags --max-count=1))"
          echo "::set-output name=build_time::$(date -u +'%m-%d-%YT%H:%M:%SZ')"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Print GoReleaser Config
        run: cat build/package/.goreleaser.yaml
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --config build/package/.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
